{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/batmanhospital/batmanhospital.component.html","./src/app/catwomanhospital/catwomanhospital.component.html","./src/app/covid/covid.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/robinhospital/robinhospital.component.html","./src/app/supermanhospital/supermanhospital.component.html","./src/app/userpage/userpage.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/batmanhospital/batmanhospital.component.css","./src/app/batmanhospital/batmanhospital.component.ts","./src/app/catwomanhospital/catwomanhospital.component.css","./src/app/catwomanhospital/catwomanhospital.component.ts","./src/app/covid/covid.component.css","./src/app/covid/covid.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/pipes/batman.pipe.ts","./src/app/pipes/catwoman.pipe.ts","./src/app/pipes/robin.pipe.ts","./src/app/pipes/superman.pipe.ts","./src/app/robinhospital/robinhospital.component.css","./src/app/robinhospital/robinhospital.component.ts","./src/app/services/users.service.ts","./src/app/supermanhospital/supermanhospital.component.css","./src/app/supermanhospital/supermanhospital.component.ts","./src/app/userpage/userpage.component.css","./src/app/userpage/userpage.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a href=\\\"#\\\" class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Covid hospitals</a>\\n      <button class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myMenu\\\">\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n    </div>\\n    <div class=\\\"navbar-collapse collapse\\\" id=\\\"myMenu\\\">\\n      <ul class=\\\"nav navbar-nav\\\" *ngIf=\\\"status\\\">\\n        <li><a href=\\\"#\\\" routerLink=\\\"/home\\\">Home</a></li>\\n\\n      </ul>\\n      <ul class=\\\"navbar-nav navbar-center nav\\\" *ngIf=\\\"dashboard\\\">\\n        <li><a href=\\\"#\\\" routerLink=\\\"/covid\\\">Dashboard</a></li>\\n      </ul>\\n      <ul class=\\\"navbar-nav navbar-right nav\\\" *ngIf=\\\"!status\\\">\\n        <li><a href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a></li>\\n      </ul>\\n      <ul class=\\\"navbar-nav navbar-right nav\\\" *ngIf=\\\"status\\\">\\n        <li><strong>Hi, {{ username }}</strong></li>\\n        <li><a href=\\\"#\\\" (click)=\\\"logout()\\\">Logout</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container-fluid\\\">\\n\\n  <router-outlet></router-outlet>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\" *ngFor=\\\"let x of patients | batman\\\">\\n        <div class=\\\"progress progress-striped active\\\">\\n            <div class=\\\"progress-bar\\\" style=\\\"width: 100%\\\"></div>\\n        </div>\\n        <h3>Admit Patient</h3>\\n        <div class=\\\"col-md-12 card\\\">\\n            <form (ngSubmit)=\\\"onSubmit(x)\\\">\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Id</label>\\n                    <input type=\\\"text\\\" name=\\\"id\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x._id\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x.name\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Contact</label>\\n                    <input type=\\\"url\\\" class=\\\"form-control highlight\\\" name=\\\"contact\\\" [(ngModel)]=\\\"x.contact\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Address</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"address\\\" [(ngModel)]=\\\"x.address\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Symptom</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"symptom\\\" [(ngModel)]=\\\"x.symptom\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Description</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"x.description\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Pincode</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pincode\\\" [(ngModel)]=\\\"x.pincode\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Area</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"area\\\" [(ngModel)]=\\\"x.area\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Hospital</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"hospital\\\" [(ngModel)]=\\\"x.hospital\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Ambulance</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"ambulance\\\" [(ngModel)]=\\\"x.ambulance\\\"\\n                        required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Admitted</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"admitted\\\" [(ngModel)]=\\\"x.admitted\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\" style=\\\"padding-top: 25px;\\\">\\n\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Admit Patient\\\">\\n                </div>\\n            </form>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\" *ngFor=\\\"let x of patients | catwoman\\\">\\n        <div class=\\\"progress progress-striped active\\\">\\n            <div class=\\\"progress-bar\\\" style=\\\"width: 100%\\\"></div>\\n        </div>\\n        <h3>Admit Patient</h3>\\n        <div class=\\\"col-md-12 card\\\">\\n            <form (ngSubmit)=\\\"onSubmit(x)\\\">\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Id</label>\\n                    <input type=\\\"text\\\" name=\\\"id\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x._id\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x.name\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Contact</label>\\n                    <input type=\\\"url\\\" class=\\\"form-control highlight\\\" name=\\\"contact\\\" [(ngModel)]=\\\"x.contact\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Address</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"address\\\" [(ngModel)]=\\\"x.address\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Symptom</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"symptom\\\" [(ngModel)]=\\\"x.symptom\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Description</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"x.description\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Pincode</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pincode\\\" [(ngModel)]=\\\"x.pincode\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Area</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"area\\\" [(ngModel)]=\\\"x.area\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Hospital</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"hospital\\\" [(ngModel)]=\\\"x.hospital\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Ambulance</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"ambulance\\\" [(ngModel)]=\\\"x.ambulance\\\"\\n                        required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Admitted</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"admitted\\\" [(ngModel)]=\\\"x.admitted\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\" style=\\\"padding-top: 25px;\\\">\\n\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Admit Patient\\\">\\n                </div>\\n            </form>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <mat-tab-group color=\\\"warn\\\">\\n            <mat-tab label=\\\"Batman Hospital\\\" color=\\\"accent\\\">\\n                <app-batmanhospital></app-batmanhospital>\\n            </mat-tab>\\n            <mat-tab label=\\\"Robin Hospital\\\">\\n                <app-robinhospital></app-robinhospital>\\n            </mat-tab>\\n            <mat-tab label=\\\"Catwoman Hospital\\\">\\n                <app-catwomanhospital></app-catwomanhospital>\\n            </mat-tab>\\n            <mat-tab label=\\\"Superman Hospital\\\">\\n                <app-supermanhospital></app-supermanhospital>\\n            </mat-tab>\\n        </mat-tab-group>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <mat-toolbar color=\\\"warn\\\">Gotham Municipal Corporation &nbsp;&nbsp;&nbsp;<i class=\\\"far fa-hospital\\\"\\n                style=\\\"color: yellowgreen; width: 100px;\\\"></i>&nbsp;&nbsp;&nbsp; covid-19 hospitals\\n        </mat-toolbar>\\n        <div class=\\\"col-md-3\\\">\\n            <mat-card>\\n                <mat-card-title>Batman Hospital</mat-card-title>\\n                <img mat-card-lg-image style=\\\"width: 230px; height: 200px;\\\"\\n                    src=\\\"https://www.deccanherald.com/sites/dh/files/styles/article_detail/public/article_images/2020/03/26/PTI25-03-2020_000136B-min-1585229704.jpg?itok=vJMaG890\\\">\\n            </mat-card>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n            <mat-card>\\n                <mat-card-title>Robin Hospital</mat-card-title>\\n                <img mat-card-lg-image style=\\\"width: 230px; height: 200px;\\\"\\n                    src=\\\"https://img.etimg.com/thumb/width-640,height-480,imgsize-235749,resizemode-1,msid-75466815/maharashtra-issues-directives-to-hospitals-as-covid-19-cases-mount.jpg\\\">\\n            </mat-card>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n            <mat-card>\\n                <mat-card-title>Catwoman Hospital</mat-card-title>\\n                <img mat-card-lg-image style=\\\"width: 230px; height: 200px;\\\"\\n                    src=\\\"https://static.independent.co.uk/s3fs-public/thumbnails/image/2020/03/26/11/NHS.jpg?w968h681\\\">\\n            </mat-card>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n            <mat-card>\\n                <mat-card-title>Superman Hospital</mat-card-title>\\n                <img mat-card-lg-image style=\\\"width: 230px; height: 200px;\\\"\\n                    src=\\\"https://staticblog.virtualvocations.com/2020/04/iStock-1208116440-1030x687.jpg\\\">\\n            </mat-card>\\n        </div>\\n\\n        <div class=\\\"col-md-8 col-md-offset-2\\\" style=\\\"padding: 17px; margin-left: 26%;\\\">\\n            <img mat-card-lg-image style=\\\"width: 530px; height: 300px;\\\" class=\\\"\\n            zoom\\\"\\n                src=\\\"https://img.freepik.com/free-vector/coronavirus-prevention-tips-concept_23-2148500672.jpg?size=626&ext=jpg\\\">\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"row\\\" *ngIf=\\\"status\\\">\\n    <div class=\\\"col-md-6 col-md-offset-3\\\">\\n        <h3 class=\\\"well text-center\\\">\\n            Login\\n        </h3>\\n        <form #login=\\\"ngForm\\\" (ngSubmit)=\\\"onLogin(login.value)\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input type=\\\"text\\\" name=\\\"username\\\" ngModel #username=\\\"ngModel\\\" class=\\\"form-control\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\" class=\\\"form-control\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary\\\">\\n\\n                <input (click)=\\\"toggleStatus()\\\" class=\\\"btn btn-default pull-right\\\" value=\\\"Signup\\\">\\n                <p style=\\\"padding: 5px;\\\" class=\\\"pull-right\\\">New User?</p>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"!status\\\">\\n    <div class=\\\"col-md-8 col-md-offset-2\\\">\\n        <h3 class=\\\"well text-center\\\">\\n            Sign up\\n        </h3>\\n        <form #signup=\\\"ngForm\\\" (ngSubmit)=\\\"onSignup(signup.value)\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input type=\\\"text\\\" name=\\\"username\\\" ngModel #username=\\\"ngModel\\\" class=\\\"form-control\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\" class=\\\"form-control\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label>Phone</label>\\n                <input type=\\\"number\\\" name=\\\"phone\\\" ngModel #phone=\\\"ngModel\\\" class=\\\"form-control\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"submit\\\" value=\\\"Signup\\\" class=\\\"btn btn-info\\\">\\n                <button (click)=\\\"toggleStatus()\\\" class=\\\"btn btn-link\\\">Login</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\" *ngFor=\\\"let x of patients | robin\\\">\\n        <div class=\\\"progress progress-striped active\\\">\\n            <div class=\\\"progress-bar\\\" style=\\\"width: 100%\\\"></div>\\n        </div>\\n        <h3>Admit Patient</h3>\\n        <div class=\\\"col-md-12 card\\\">\\n            <form (ngSubmit)=\\\"onSubmit(x)\\\">\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Id</label>\\n                    <input type=\\\"text\\\" name=\\\"id\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x._id\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x.name\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Contact</label>\\n                    <input type=\\\"url\\\" class=\\\"form-control highlight\\\" name=\\\"contact\\\" [(ngModel)]=\\\"x.contact\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Address</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"address\\\" [(ngModel)]=\\\"x.address\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Symptom</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"symptom\\\" [(ngModel)]=\\\"x.symptom\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Description</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"x.description\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Pincode</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pincode\\\" [(ngModel)]=\\\"x.pincode\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Area</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"area\\\" [(ngModel)]=\\\"x.area\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Hospital</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"hospital\\\" [(ngModel)]=\\\"x.hospital\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Ambulance</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"ambulance\\\" [(ngModel)]=\\\"x.ambulance\\\"\\n                        required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Admitted</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"admitted\\\" [(ngModel)]=\\\"x.admitted\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\" style=\\\"padding-top: 25px;\\\">\\n\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Admit Patient\\\">\\n                </div>\\n            </form>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\" *ngFor=\\\"let x of patients | superman\\\">\\n        <div class=\\\"progress progress-striped active\\\">\\n            <div class=\\\"progress-bar\\\" style=\\\"width: 100%\\\"></div>\\n        </div>\\n        <h3>Admit Patient</h3>\\n        <div class=\\\"col-md-12 card\\\">\\n            <form (ngSubmit)=\\\"onSubmit(x)\\\">\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Id</label>\\n                    <input type=\\\"text\\\" name=\\\"id\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x._id\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x.name\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Contact</label>\\n                    <input type=\\\"url\\\" class=\\\"form-control highlight\\\" name=\\\"contact\\\" [(ngModel)]=\\\"x.contact\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Address</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"address\\\" [(ngModel)]=\\\"x.address\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Symptom</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"symptom\\\" [(ngModel)]=\\\"x.symptom\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Description</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"x.description\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Pincode</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pincode\\\" [(ngModel)]=\\\"x.pincode\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Area</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"area\\\" [(ngModel)]=\\\"x.area\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Hospital</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"hospital\\\" [(ngModel)]=\\\"x.hospital\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Ambulance</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"ambulance\\\" [(ngModel)]=\\\"x.ambulance\\\"\\n                        required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Admitted</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"admitted\\\" [(ngModel)]=\\\"x.admitted\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\" style=\\\"padding-top: 25px;\\\">\\n\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Admit Patient\\\">\\n                </div>\\n            </form>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8 col-md-offset-2\\\">\\n            <div class=\\\"jumbotron\\\">\\n                <h3 class=\\\"text-center\\\">\\n                    Admit the patient in the nearby hospital\\n                </h3>\\n            </div>\\n\\n            <form class=\\\"form-horizontal\\\" #patient=\\\"ngForm\\\" (ngSubmit)=\\\"addPatient(patient.value)\\\" autocomplete=\\\"off\\\">\\n                <fieldset>\\n                    <legend>Patients info</legend>\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"inputName\\\" class=\\\"col-lg-4 control-label\\\">Name</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" ngModel #name=\\\"ngModel\\\"\\n                                placeholder=\\\"Name\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"inputContact\\\" class=\\\"col-lg-4 control-label\\\">Contact</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"contact\\\" ngModel #contact=\\\"ngModel\\\"\\n                                placeholder=\\\"Phone\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"inputAddress\\\" class=\\\"col-lg-4 control-label\\\">Address</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" ngModel #address=\\\"ngModel\\\"\\n                                placeholder=\\\"Address\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"select\\\" class=\\\"col-lg-4 control-label\\\">Select any one symptom</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <select class=\\\"form-control\\\" name=\\\"symptom\\\" ngModel #symptom=\\\"ngModel\\\"\\n                                aria-placeholder=\\\"Symptom\\\">\\n                                <option>Fever</option>\\n                                <option>Breathlessness</option>\\n                                <option>Cold</option>\\n                                <option>Cough</option>\\n                            </select>\\n\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"textArea\\\" class=\\\"col-lg-4 control-label\\\">Case description</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"description\\\" ngModel\\n                                #description=\\\"ngModel\\\"></textarea>\\n                            <span class=\\\"help-block\\\">Describe the patients condition\\n                            </span>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"inputPin\\\" class=\\\"col-lg-4 control-label\\\">Area Pincode</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pincode\\\" ngModel #pincode=\\\"ngModel\\\"\\n                                placeholder=\\\"Nearby area pincode\\\" (keyup)=\\\"onKey($event)\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"inputt\\\" class=\\\"col-lg-4 control-label\\\">Area</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"area\\\" [(ngModel)]=\\\"area\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"hospital\\\" class=\\\"col-lg-4 control-label\\\">Hospital</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"hospital\\\" [(ngModel)]=\\\"hospital\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"ambulance\\\" class=\\\"col-lg-4 control-label\\\">Ambulance</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ambulance\\\" [(ngModel)]=\\\"ambulance\\\">\\n                        </div>\\n                    </div>\\n\\n                    <!-- <div class=\\\"form-group\\\">\\n                        <label class=\\\"col-lg-2 control-label\\\">Radios</label>\\n                        <div class=\\\"col-lg-10\\\">\\n                            <div class=\\\"radio\\\">\\n                                <label>\\n                                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios1\\\" value=\\\"option1\\\"\\n                                        checked=\\\"\\\">\\n                                    Option one is this\\n                                </label>\\n                            </div>\\n                            <div class=\\\"radio\\\">\\n                                <label>\\n                                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"option2\\\">\\n                                    Option two can be something else\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div> -->\\n\\n                    <div class=\\\"form-group\\\">\\n                        <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\n                        &nbsp;&nbsp;&nbsp;\\n                        <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary\\\">\\n                    </div>\\n                </fieldset>\\n            </form>\\n            <!-- <input (keyup)=\\\"onKey($event)\\\">\\n            <p>{{pin}}</p>\\n            <p>{{area}}</p>\\n            <p>{{hospital}}</p>\\n            <p>{{ambulance}}</p> -->\\n        </div>\\n    </div>\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { CovidComponent } from './covid/covid.component';\nimport { UserpageComponent } from './userpage/userpage.component';\nimport { from } from 'rxjs';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'userpage',\n    component: UserpageComponent\n  },\n  {\n    path: 'covid',\n    component: CovidComponent\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Covid hospitals';\n  status: any = false;\n  dashboard: any = false;\n\n  username: any;\n  phone: any;\n  constructor() {\n    this.username = localStorage.getItem('useremail');\n    this.phone = localStorage.getItem('userphone');\n    this.auth();\n  }\n  ngOnInit() {\n  }\n\n  auth() {\n    console.log('app', localStorage.getItem('err_code'));\n    console.log('app', localStorage.getItem('useremail'));\n    console.log('app', localStorage.getItem('userphone'));\n\n    const num = Number(localStorage.getItem('err_code'));\n\n    if (num === 200 && localStorage.getItem('useremail') === 'admin@admin.com') {\n      this.dashboard = true;\n    }\n\n    if (num === 200) {\n      this.status = true;\n    } else {\n      this.status = false;\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('err_code');\n    localStorage.removeItem('useremail');\n    localStorage.removeItem('userphone');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { HomeComponent } from './home/home.component';\nimport { CovidComponent } from './covid/covid.component';\nimport { LoginComponent } from './login/login.component';\nimport { UsersService } from './services/users.service';\nimport { UserpageComponent } from './userpage/userpage.component';\nimport { BatmanhospitalComponent } from './batmanhospital/batmanhospital.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BatmanPipe } from './pipes/batman.pipe';\nimport { RobinPipe } from './pipes/robin.pipe';\nimport { CatwomanPipe } from './pipes/catwoman.pipe';\nimport { SupermanPipe } from './pipes/superman.pipe';\nimport { RobinhospitalComponent } from './robinhospital/robinhospital.component';\nimport { CatwomanhospitalComponent } from './catwomanhospital/catwomanhospital.component';\nimport { SupermanhospitalComponent } from './supermanhospital/supermanhospital.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CovidComponent,\n    LoginComponent,\n    UserpageComponent,\n    BatmanhospitalComponent,\n    BatmanPipe,\n    RobinPipe,\n    CatwomanPipe,\n    SupermanPipe,\n    RobinhospitalComponent,\n    CatwomanhospitalComponent,\n    SupermanhospitalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatTabsModule\n  ],\n  providers: [UsersService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \".highlight {\\r\\n    background-color: darkkhaki;\\r\\n}\\r\\n.card {\\r\\nbackground-color: rgb(224, 224, 148);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmF0bWFuaG9zcGl0YWwvYmF0bWFuaG9zcGl0YWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDJCQUEyQjtBQUMvQjtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDIiwiZmlsZSI6InNyYy9hcHAvYmF0bWFuaG9zcGl0YWwvYmF0bWFuaG9zcGl0YWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oaWdobGlnaHQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2toYWtpO1xyXG59XHJcbi5jYXJkIHtcclxuYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyNCwgMjI0LCAxNDgpO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Patient } from '../model/patient.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-batmanhospital',\n  templateUrl: './batmanhospital.component.html',\n  styleUrls: ['./batmanhospital.component.css']\n})\nexport class BatmanhospitalComponent implements OnInit {\n  patients: any[];\n  constructor(private obj: UsersService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.obj.getpatients().subscribe((res: any) => {\n      console.log(res);\n      this.patients = res;\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  onSubmit(data: Patient) {\n    console.log(data);\n    this.obj.updatepatient(data).subscribe((res: any) => {\n      console.log(res);\n      this.router.navigate(['/covid']);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n}\n","export default \".highlight {\\r\\n    background-color: darkkhaki;\\r\\n}\\r\\n.card {\\r\\nbackground-color: rgb(224, 224, 148);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2F0d29tYW5ob3NwaXRhbC9jYXR3b21hbmhvc3BpdGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7QUFDL0I7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyIsImZpbGUiOiJzcmMvYXBwL2NhdHdvbWFuaG9zcGl0YWwvY2F0d29tYW5ob3NwaXRhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhpZ2hsaWdodCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJra2hha2k7XHJcbn1cclxuLmNhcmQge1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI0LCAyMjQsIDE0OCk7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Patient } from '../model/patient.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-catwomanhospital',\n  templateUrl: './catwomanhospital.component.html',\n  styleUrls: ['./catwomanhospital.component.css']\n})\nexport class CatwomanhospitalComponent implements OnInit {\n\n  patients: any[];\n  constructor(private obj: UsersService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.obj.getpatients().subscribe((res: any) => {\n      console.log(res);\n      this.patients = res;\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  onSubmit(data: Patient) {\n    console.log(data);\n    this.obj.updatepatient(data).subscribe((res: any) => {\n      console.log(res);\n      this.router.navigate(['/covid']);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n}\n","export default \".tab {\\r\\n    background-color: floralwhite;\\r\\n    font-size: larger;\\r\\n    color: orangered;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY292aWQvY292aWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDZCQUE2QjtJQUM3QixpQkFBaUI7SUFDakIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY292aWQvY292aWQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZmxvcmFsd2hpdGU7XHJcbiAgICBmb250LXNpemU6IGxhcmdlcjtcclxuICAgIGNvbG9yOiBvcmFuZ2VyZWQ7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-covid',\n  templateUrl: './covid.component.html',\n  styleUrls: ['./covid.component.css']\n})\nexport class CovidComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".zoom {\\r\\n  padding: 10px;\\r\\n  background-color: rgb(157, 218, 157);\\r\\n  transition: transform .2s; /* Animation */\\r\\n  width: 160px;\\r\\n  height: 160px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.zoom:hover {\\r\\n  transform: scale(1.1); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isb0NBQW9DO0VBQ3BDLHlCQUF5QixFQUFFLGNBQWM7RUFDekMsWUFBWTtFQUNaLGFBQWE7RUFDYixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UscUJBQXFCLEVBQUUscUZBQXFGO0FBQzlHIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuem9vbSB7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTU3LCAyMTgsIDE1Nyk7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4yczsgLyogQW5pbWF0aW9uICovXHJcbiAgd2lkdGg6IDE2MHB4O1xyXG4gIGhlaWdodDogMTYwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbi56b29tOmhvdmVyIHtcclxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7IC8qICgxNTAlIHpvb20gLSBOb3RlOiBpZiB0aGUgem9vbSBpcyB0b28gbGFyZ2UsIGl0IHdpbGwgZ28gb3V0c2lkZSBvZiB0aGUgdmlld3BvcnQpICovXHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { User } from '../model/users.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  status = true;\n\n  constructor(private obj: UsersService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  toggleStatus() {\n    this.status = !this.status;\n  }\n\n  onLogin(data: User) {\n    console.log(data);\n    this.obj.userLogin(data).subscribe(\n      (res: any) => {\n        console.log(res);\n        localStorage.setItem(\"useremail\", res.data.email);\n        localStorage.setItem(\"userphone\", res.data.phone);\n        localStorage.setItem('err_code', res.error_code);\n        console.log('err_code', localStorage.getItem('err_code'));\n        if (res.data.email === 'admin@admin.com') {\n          console.log('Ambulance driver', data);\n          this.router.navigate(['/covid']);\n        }\n        else {\n          console.log('user', data);\n\n          this.router.navigate(['/userpage']);\n\n\n        }\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  onSignup(data: User) {\n    console.log(data);\n    this.obj.userSignup(data).subscribe(\n      (res: any) => {\n        console.log(res);\n        this.router.navigate(['/']);\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'batman'\n})\nexport class BatmanPipe implements PipeTransform {\n\n  transform(data: any[]): any[] {\n    if (!data) return [];\n    return data.filter(it => {\n      return it.hospital.includes('Batman Hospital');\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'catwoman'\n})\nexport class CatwomanPipe implements PipeTransform {\n\n  transform(data: any[]): any[] {\n    if (!data) return [];\n    return data.filter(it => {\n      return it.hospital.includes('Catwoman Hospital');\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'robin'\n})\nexport class RobinPipe implements PipeTransform {\n\n  transform(data: any[]): any[] {\n    if (!data) return [];\n    return data.filter(it => {\n      return it.hospital.includes('Robin Hospital');\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'superman'\n})\nexport class SupermanPipe implements PipeTransform {\n\n  transform(data: any[]): any[] {\n    if (!data) return [];\n    return data.filter(it => {\n      return it.hospital.includes('Superman Hospital');\n    });\n  }\n\n}\n","export default \".highlight {\\r\\n    background-color: darkkhaki;\\r\\n}\\r\\n.card {\\r\\nbackground-color: rgb(224, 224, 148);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9iaW5ob3NwaXRhbC9yb2Jpbmhvc3BpdGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7QUFDL0I7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyIsImZpbGUiOiJzcmMvYXBwL3JvYmluaG9zcGl0YWwvcm9iaW5ob3NwaXRhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhpZ2hsaWdodCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJra2hha2k7XHJcbn1cclxuLmNhcmQge1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI0LCAyMjQsIDE0OCk7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Patient } from '../model/patient.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-robinhospital',\n  templateUrl: './robinhospital.component.html',\n  styleUrls: ['./robinhospital.component.css']\n})\nexport class RobinhospitalComponent implements OnInit {\n\n  patients: any[];\n  constructor(private obj: UsersService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.obj.getpatients().subscribe((res: any) => {\n      console.log(res);\n      this.patients = res;\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  onSubmit(data: Patient) {\n    console.log(data);\n    this.obj.updatepatient(data).subscribe((res: any) => {\n      console.log(res);\n      this.router.navigate(['/covid']);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../model/users.model';\nimport { Patient } from '../model/patient.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  url: any = 'https://covidrestapi.herokuapp.com';\n  id: any;\n\n  constructor(private http: HttpClient) { }\n\n  userSignup(data: User) {\n    const body = {\n      email: data.username,\n      password: data.password,\n      phone: data.phone\n    };\n    return this.http.post(this.url + '/covid/api/users/signup', body);\n  }\n\n  userLogin(data: User) {\n    const body = {\n      email: data.username,\n      password: data.password\n    };\n    return this.http.post(this.url + '/covid/api/users/login', body);\n  }\n\n  addPatient(data: Patient) {\n    const body = {\n      name: data.name,\n      contact: data.contact,\n      address: data.address,\n      symptom: data.symptom,\n      description: data.description,\n      pincode: data.pincode,\n      area: data.area,\n      hospital: data.hospital,\n      ambulance: data.ambulance,\n\n    };\n    return this.http.post(this.url + '/covid/api/addpatient', body);\n  }\n\n  getpatients() {\n    return this.http.get(this.url + '/covid/api/patients');\n  }\n\n  updatepatient(data: Patient) {\n    const body = {\n      _id: data._id,\n      name: data.name,\n      contact: data.contact,\n      address: data.address,\n      symptom: data.symptom,\n      description: data.description,\n      pincode: data.pincode,\n      area: data.area,\n      hospital: data.hospital,\n      ambulance: data.ambulance,\n      admitted: data.admitted,\n    };\n\n    return this.http.patch(this.url + '/covid/api/updatepatient/:_id', body);\n  }\n\n}\n","export default \".highlight {\\r\\n    background-color: darkkhaki;\\r\\n}\\r\\n.card {\\r\\nbackground-color: rgb(224, 224, 148);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3VwZXJtYW5ob3NwaXRhbC9zdXBlcm1hbmhvc3BpdGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7QUFDL0I7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyIsImZpbGUiOiJzcmMvYXBwL3N1cGVybWFuaG9zcGl0YWwvc3VwZXJtYW5ob3NwaXRhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhpZ2hsaWdodCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJra2hha2k7XHJcbn1cclxuLmNhcmQge1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI0LCAyMjQsIDE0OCk7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Patient } from '../model/patient.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-supermanhospital',\n  templateUrl: './supermanhospital.component.html',\n  styleUrls: ['./supermanhospital.component.css']\n})\nexport class SupermanhospitalComponent implements OnInit {\n\n  patients: any[];\n  constructor(private obj: UsersService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.obj.getpatients().subscribe((res: any) => {\n      console.log(res);\n      this.patients = res;\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  onSubmit(data: Patient) {\n    console.log(data);\n    this.obj.updatepatient(data).subscribe((res: any) => {\n      console.log(res);\n      this.router.navigate(['/covid']);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJwYWdlL3VzZXJwYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Patient } from '../model/patient.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-userpage',\n  templateUrl: './userpage.component.html',\n  styleUrls: ['./userpage.component.css']\n})\nexport class UserpageComponent implements OnInit {\n  pin: any = '';\n  area: any;\n  hospital: any;\n  ambulance: any;\n  batman: any = ['AMB1', 'AMB2'];\n  catwoman: any = ['AMC1', 'AMC2'];\n  superman: any = ['AMS1', 'AMS2'];\n  constructor(private obj: UsersService, private router: Router) { }\n\n  ngOnInit() {\n\n    //check if there is no user logged in\n    if (localStorage.getItem('err_code') === null && localStorage.getItem('useremail') === null) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  shuffle(array: any) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array[0];\n  }\n\n  onKey(event: any) {\n    this.pin = event.target.value;\n    if (this.pin === '403200') {\n      this.area = 'North';\n      this.hospital = 'Batman Hospital';\n      this.ambulance = this.shuffle(this.batman);\n    }\n    else if (this.pin === '403201') {\n      this.area = 'East';\n      this.hospital = 'Robin Hospital';\n      this.ambulance = 'AMR1';\n    }\n    else if (this.pin === '403202') {\n      this.area = 'South';\n      this.hospital = 'Catwoman Hospital';\n      this.ambulance = this.shuffle(this.catwoman);\n    }\n    else if (this.pin === '403203') {\n      this.area = 'West';\n      this.hospital = 'Superman Hospital';\n      this.ambulance = this.shuffle(this.superman);\n    }\n  }\n\n  addPatient(data: Patient) {\n    console.log(data);\n    this.obj.addPatient(data).subscribe((res: any) => {\n      console.log(res);\n      alert(res.message);\n      this.router.navigate(['/dashboard']);\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}