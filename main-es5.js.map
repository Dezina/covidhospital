{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/batmanhospital/batmanhospital.component.html","src/app/catwomanhospital/catwomanhospital.component.html","src/app/covid/covid.component.html","src/app/home/home.component.html","src/app/login/login.component.html","src/app/robinhospital/robinhospital.component.html","src/app/supermanhospital/supermanhospital.component.html","src/app/userpage/userpage.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/batmanhospital/batmanhospital.component.css","src/app/batmanhospital/batmanhospital.component.ts","src/app/catwomanhospital/catwomanhospital.component.css","src/app/catwomanhospital/catwomanhospital.component.ts","src/app/covid/covid.component.css","src/app/covid/covid.component.ts","src/app/home/home.component.css","src/app/home/home.component.ts","src/app/login/login.component.css","src/app/login/login.component.ts","src/app/pipes/batman.pipe.ts","src/app/pipes/catwoman.pipe.ts","src/app/pipes/robin.pipe.ts","src/app/pipes/superman.pipe.ts","src/app/robinhospital/robinhospital.component.css","src/app/robinhospital/robinhospital.component.ts","src/app/services/users.service.ts","src/app/supermanhospital/supermanhospital.component.css","src/app/supermanhospital/supermanhospital.component.ts","src/app/userpage/userpage.component.css","src/app/userpage/userpage.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a href=\\\"#\\\" class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Covid hospitals</a>\\n      <button class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myMenu\\\">\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n    </div>\\n    <div class=\\\"navbar-collapse collapse\\\" id=\\\"myMenu\\\">\\n      <ul class=\\\"nav navbar-nav\\\" *ngIf=\\\"status\\\">\\n        <li><a href=\\\"#\\\" routerLink=\\\"/home\\\">Home</a></li>\\n\\n      </ul>\\n      <ul class=\\\"navbar-nav navbar-center nav\\\" *ngIf=\\\"dashboard\\\">\\n        <li><a href=\\\"#\\\" routerLink=\\\"/covid\\\">Dashboard</a></li>\\n      </ul>\\n      <ul class=\\\"navbar-nav navbar-right nav\\\" *ngIf=\\\"!status\\\">\\n        <li><a href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a></li>\\n      </ul>\\n      <ul class=\\\"navbar-nav navbar-right nav\\\" *ngIf=\\\"status\\\">\\n        <li><strong>Hi, {{ username }}</strong></li>\\n        <li><a href=\\\"#\\\" (click)=\\\"logout()\\\">Logout</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container-fluid\\\">\\n\\n  <router-outlet></router-outlet>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\" *ngFor=\\\"let x of patients | batman\\\">\\n        <div class=\\\"progress progress-striped active\\\">\\n            <div class=\\\"progress-bar\\\" style=\\\"width: 100%\\\"></div>\\n        </div>\\n        <h3>Admit Patient</h3>\\n        <div class=\\\"col-md-12 card\\\">\\n            <form (ngSubmit)=\\\"onSubmit(x)\\\">\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Id</label>\\n                    <input type=\\\"text\\\" name=\\\"id\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x._id\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x.name\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Contact</label>\\n                    <input type=\\\"url\\\" class=\\\"form-control highlight\\\" name=\\\"contact\\\" [(ngModel)]=\\\"x.contact\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Address</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"address\\\" [(ngModel)]=\\\"x.address\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Symptom</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"symptom\\\" [(ngModel)]=\\\"x.symptom\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Description</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"x.description\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Pincode</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pincode\\\" [(ngModel)]=\\\"x.pincode\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Area</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"area\\\" [(ngModel)]=\\\"x.area\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Hospital</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"hospital\\\" [(ngModel)]=\\\"x.hospital\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Ambulance</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"ambulance\\\" [(ngModel)]=\\\"x.ambulance\\\"\\n                        required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Admitted</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"admitted\\\" [(ngModel)]=\\\"x.admitted\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\" style=\\\"padding-top: 25px;\\\">\\n\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Admit Patient\\\">\\n                </div>\\n            </form>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\" *ngFor=\\\"let x of patients | catwoman\\\">\\n        <div class=\\\"progress progress-striped active\\\">\\n            <div class=\\\"progress-bar\\\" style=\\\"width: 100%\\\"></div>\\n        </div>\\n        <h3>Admit Patient</h3>\\n        <div class=\\\"col-md-12 card\\\">\\n            <form (ngSubmit)=\\\"onSubmit(x)\\\">\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Id</label>\\n                    <input type=\\\"text\\\" name=\\\"id\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x._id\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x.name\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Contact</label>\\n                    <input type=\\\"url\\\" class=\\\"form-control highlight\\\" name=\\\"contact\\\" [(ngModel)]=\\\"x.contact\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Address</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"address\\\" [(ngModel)]=\\\"x.address\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Symptom</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"symptom\\\" [(ngModel)]=\\\"x.symptom\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Description</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"x.description\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Pincode</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pincode\\\" [(ngModel)]=\\\"x.pincode\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Area</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"area\\\" [(ngModel)]=\\\"x.area\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Hospital</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"hospital\\\" [(ngModel)]=\\\"x.hospital\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Ambulance</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"ambulance\\\" [(ngModel)]=\\\"x.ambulance\\\"\\n                        required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Admitted</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"admitted\\\" [(ngModel)]=\\\"x.admitted\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\" style=\\\"padding-top: 25px;\\\">\\n\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Admit Patient\\\">\\n                </div>\\n            </form>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <mat-tab-group color=\\\"warn\\\">\\n            <mat-tab label=\\\"Batman Hospital\\\" color=\\\"accent\\\">\\n                <app-batmanhospital></app-batmanhospital>\\n            </mat-tab>\\n            <mat-tab label=\\\"Robin Hospital\\\">\\n                <app-robinhospital></app-robinhospital>\\n            </mat-tab>\\n            <mat-tab label=\\\"Catwoman Hospital\\\">\\n                <app-catwomanhospital></app-catwomanhospital>\\n            </mat-tab>\\n            <mat-tab label=\\\"Superman Hospital\\\">\\n                <app-supermanhospital></app-supermanhospital>\\n            </mat-tab>\\n        </mat-tab-group>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <mat-toolbar color=\\\"warn\\\">Gotham Municipal Corporation &nbsp;&nbsp;&nbsp;<i class=\\\"far fa-hospital\\\"\\n                style=\\\"color: yellowgreen; width: 100px;\\\"></i>&nbsp;&nbsp;&nbsp; covid-19 hospitals\\n        </mat-toolbar>\\n        <div class=\\\"col-md-3\\\">\\n            <mat-card>\\n                <mat-card-title>Batman Hospital</mat-card-title>\\n                <img mat-card-lg-image style=\\\"width: 230px; height: 200px;\\\"\\n                    src=\\\"https://www.deccanherald.com/sites/dh/files/styles/article_detail/public/article_images/2020/03/26/PTI25-03-2020_000136B-min-1585229704.jpg?itok=vJMaG890\\\">\\n            </mat-card>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n            <mat-card>\\n                <mat-card-title>Robin Hospital</mat-card-title>\\n                <img mat-card-lg-image style=\\\"width: 230px; height: 200px;\\\"\\n                    src=\\\"https://img.etimg.com/thumb/width-640,height-480,imgsize-235749,resizemode-1,msid-75466815/maharashtra-issues-directives-to-hospitals-as-covid-19-cases-mount.jpg\\\">\\n            </mat-card>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n            <mat-card>\\n                <mat-card-title>Catwoman Hospital</mat-card-title>\\n                <img mat-card-lg-image style=\\\"width: 230px; height: 200px;\\\"\\n                    src=\\\"https://static.independent.co.uk/s3fs-public/thumbnails/image/2020/03/26/11/NHS.jpg?w968h681\\\">\\n            </mat-card>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n            <mat-card>\\n                <mat-card-title>Superman Hospital</mat-card-title>\\n                <img mat-card-lg-image style=\\\"width: 230px; height: 200px;\\\"\\n                    src=\\\"https://staticblog.virtualvocations.com/2020/04/iStock-1208116440-1030x687.jpg\\\">\\n            </mat-card>\\n        </div>\\n\\n        <div class=\\\"col-md-8 col-md-offset-2\\\" style=\\\"padding: 17px; margin-left: 26%;\\\">\\n            <img mat-card-lg-image style=\\\"width: 530px; height: 300px;\\\" class=\\\"\\n            zoom\\\"\\n                src=\\\"https://img.freepik.com/free-vector/coronavirus-prevention-tips-concept_23-2148500672.jpg?size=626&ext=jpg\\\">\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"row\\\" *ngIf=\\\"status\\\">\\n    <div class=\\\"col-md-6 col-md-offset-3\\\">\\n        <h3 class=\\\"well text-center\\\">\\n            Login\\n        </h3>\\n        <form #login=\\\"ngForm\\\" (ngSubmit)=\\\"onLogin(login.value)\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input type=\\\"text\\\" name=\\\"username\\\" ngModel #username=\\\"ngModel\\\" class=\\\"form-control\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\" class=\\\"form-control\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary\\\">\\n\\n                <input (click)=\\\"toggleStatus()\\\" class=\\\"btn btn-default pull-right\\\" value=\\\"Signup\\\">\\n                <p style=\\\"padding: 5px;\\\" class=\\\"pull-right\\\">New User?</p>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"!status\\\">\\n    <div class=\\\"col-md-8 col-md-offset-2\\\">\\n        <h3 class=\\\"well text-center\\\">\\n            Sign up\\n        </h3>\\n        <form #signup=\\\"ngForm\\\" (ngSubmit)=\\\"onSignup(signup.value)\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input type=\\\"text\\\" name=\\\"username\\\" ngModel #username=\\\"ngModel\\\" class=\\\"form-control\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\" class=\\\"form-control\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label>Phone</label>\\n                <input type=\\\"number\\\" name=\\\"phone\\\" ngModel #phone=\\\"ngModel\\\" class=\\\"form-control\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"submit\\\" value=\\\"Signup\\\" class=\\\"btn btn-info\\\">\\n                <button (click)=\\\"toggleStatus()\\\" class=\\\"btn btn-link\\\">Login</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\" *ngFor=\\\"let x of patients | robin\\\">\\n        <div class=\\\"progress progress-striped active\\\">\\n            <div class=\\\"progress-bar\\\" style=\\\"width: 100%\\\"></div>\\n        </div>\\n        <h3>Admit Patient</h3>\\n        <div class=\\\"col-md-12 card\\\">\\n            <form (ngSubmit)=\\\"onSubmit(x)\\\">\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Id</label>\\n                    <input type=\\\"text\\\" name=\\\"id\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x._id\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x.name\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Contact</label>\\n                    <input type=\\\"url\\\" class=\\\"form-control highlight\\\" name=\\\"contact\\\" [(ngModel)]=\\\"x.contact\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Address</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"address\\\" [(ngModel)]=\\\"x.address\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Symptom</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"symptom\\\" [(ngModel)]=\\\"x.symptom\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Description</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"x.description\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Pincode</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pincode\\\" [(ngModel)]=\\\"x.pincode\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Area</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"area\\\" [(ngModel)]=\\\"x.area\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Hospital</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"hospital\\\" [(ngModel)]=\\\"x.hospital\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Ambulance</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"ambulance\\\" [(ngModel)]=\\\"x.ambulance\\\"\\n                        required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Admitted</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"admitted\\\" [(ngModel)]=\\\"x.admitted\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\" style=\\\"padding-top: 25px;\\\">\\n\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Admit Patient\\\">\\n                </div>\\n            </form>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\" *ngFor=\\\"let x of patients | superman\\\">\\n        <div class=\\\"progress progress-striped active\\\">\\n            <div class=\\\"progress-bar\\\" style=\\\"width: 100%\\\"></div>\\n        </div>\\n        <h3>Admit Patient</h3>\\n        <div class=\\\"col-md-12 card\\\">\\n            <form (ngSubmit)=\\\"onSubmit(x)\\\">\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Id</label>\\n                    <input type=\\\"text\\\" name=\\\"id\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x._id\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Name</label>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control highlight\\\" [(ngModel)]=\\\"x.name\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Contact</label>\\n                    <input type=\\\"url\\\" class=\\\"form-control highlight\\\" name=\\\"contact\\\" [(ngModel)]=\\\"x.contact\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Address</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"address\\\" [(ngModel)]=\\\"x.address\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Symptom</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"symptom\\\" [(ngModel)]=\\\"x.symptom\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Description</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"x.description\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Pincode</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pincode\\\" [(ngModel)]=\\\"x.pincode\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Area</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"area\\\" [(ngModel)]=\\\"x.area\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Hospital</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"hospital\\\" [(ngModel)]=\\\"x.hospital\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Ambulance</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"ambulance\\\" [(ngModel)]=\\\"x.ambulance\\\"\\n                        required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\">\\n                    <label>Admitted</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control highlight\\\" name=\\\"admitted\\\" [(ngModel)]=\\\"x.admitted\\\" required>\\n                </div>\\n                <div class=\\\"form-group col-md-3\\\" style=\\\"padding-top: 25px;\\\">\\n\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Admit Patient\\\">\\n                </div>\\n            </form>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8 col-md-offset-2\\\">\\n            <div class=\\\"jumbotron\\\">\\n                <h3 class=\\\"text-center\\\">\\n                    Admit the patient in the nearby hospital\\n                </h3>\\n            </div>\\n\\n            <form class=\\\"form-horizontal\\\" #patient=\\\"ngForm\\\" (ngSubmit)=\\\"addPatient(patient.value)\\\" autocomplete=\\\"off\\\">\\n                <fieldset>\\n                    <legend>Patients info</legend>\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"inputName\\\" class=\\\"col-lg-4 control-label\\\">Name</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" ngModel #name=\\\"ngModel\\\"\\n                                placeholder=\\\"Name\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"inputContact\\\" class=\\\"col-lg-4 control-label\\\">Contact</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"contact\\\" ngModel #contact=\\\"ngModel\\\"\\n                                placeholder=\\\"Phone\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"inputAddress\\\" class=\\\"col-lg-4 control-label\\\">Address</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" ngModel #address=\\\"ngModel\\\"\\n                                placeholder=\\\"Address\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"select\\\" class=\\\"col-lg-4 control-label\\\">Select any one symptom</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <select class=\\\"form-control\\\" name=\\\"symptom\\\" ngModel #symptom=\\\"ngModel\\\"\\n                                aria-placeholder=\\\"Symptom\\\">\\n                                <option>Fever</option>\\n                                <option>Breathlessness</option>\\n                                <option>Cold</option>\\n                                <option>Cough</option>\\n                            </select>\\n\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"textArea\\\" class=\\\"col-lg-4 control-label\\\">Case description</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"description\\\" ngModel\\n                                #description=\\\"ngModel\\\"></textarea>\\n                            <span class=\\\"help-block\\\">Describe the patients condition\\n                            </span>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"inputPin\\\" class=\\\"col-lg-4 control-label\\\">Area Pincode</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"pincode\\\" ngModel #pincode=\\\"ngModel\\\"\\n                                placeholder=\\\"Nearby area pincode\\\" (keyup)=\\\"onKey($event)\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"inputt\\\" class=\\\"col-lg-4 control-label\\\">Area</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"area\\\" [(ngModel)]=\\\"area\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"hospital\\\" class=\\\"col-lg-4 control-label\\\">Hospital</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"hospital\\\" [(ngModel)]=\\\"hospital\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"ambulance\\\" class=\\\"col-lg-4 control-label\\\">Ambulance</label>\\n                        <div class=\\\"col-lg-8\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"ambulance\\\" [(ngModel)]=\\\"ambulance\\\">\\n                        </div>\\n                    </div>\\n\\n                    <!-- <div class=\\\"form-group\\\">\\n                        <label class=\\\"col-lg-2 control-label\\\">Radios</label>\\n                        <div class=\\\"col-lg-10\\\">\\n                            <div class=\\\"radio\\\">\\n                                <label>\\n                                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios1\\\" value=\\\"option1\\\"\\n                                        checked=\\\"\\\">\\n                                    Option one is this\\n                                </label>\\n                            </div>\\n                            <div class=\\\"radio\\\">\\n                                <label>\\n                                    <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"option2\\\">\\n                                    Option two can be something else\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div> -->\\n\\n                    <div class=\\\"form-group\\\">\\n                        <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\n                        &nbsp;&nbsp;&nbsp;\\n                        <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary\\\">\\n                    </div>\\n                </fieldset>\\n            </form>\\n            <!-- <input (keyup)=\\\"onKey($event)\\\">\\n            <p>{{pin}}</p>\\n            <p>{{area}}</p>\\n            <p>{{hospital}}</p>\\n            <p>{{ambulance}}</p> -->\\n        </div>\\n    </div>\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { CovidComponent } from './covid/covid.component';\nimport { UserpageComponent } from './userpage/userpage.component';\nimport { from } from 'rxjs';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'userpage',\n    component: UserpageComponent\n  },\n  {\n    path: 'covid',\n    component: CovidComponent\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Covid hospitals';\n  status: any = false;\n  dashboard: any = false;\n\n  username: any;\n  phone: any;\n  constructor() {\n    this.username = localStorage.getItem('useremail');\n    this.phone = localStorage.getItem('userphone');\n    this.auth();\n  }\n  ngOnInit() {\n  }\n\n  auth() {\n    console.log('app', localStorage.getItem('err_code'));\n    console.log('app', localStorage.getItem('useremail'));\n    console.log('app', localStorage.getItem('userphone'));\n\n    const num = Number(localStorage.getItem('err_code'));\n\n    if (num === 200 && localStorage.getItem('useremail') === 'admin@admin.com') {\n      this.dashboard = true;\n    }\n\n    if (num === 200) {\n      this.status = true;\n    } else {\n      this.status = false;\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('err_code');\n    localStorage.removeItem('useremail');\n    localStorage.removeItem('userphone');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { HomeComponent } from './home/home.component';\nimport { CovidComponent } from './covid/covid.component';\nimport { LoginComponent } from './login/login.component';\nimport { UsersService } from './services/users.service';\nimport { UserpageComponent } from './userpage/userpage.component';\nimport { BatmanhospitalComponent } from './batmanhospital/batmanhospital.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BatmanPipe } from './pipes/batman.pipe';\nimport { RobinPipe } from './pipes/robin.pipe';\nimport { CatwomanPipe } from './pipes/catwoman.pipe';\nimport { SupermanPipe } from './pipes/superman.pipe';\nimport { RobinhospitalComponent } from './robinhospital/robinhospital.component';\nimport { CatwomanhospitalComponent } from './catwomanhospital/catwomanhospital.component';\nimport { SupermanhospitalComponent } from './supermanhospital/supermanhospital.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CovidComponent,\n    LoginComponent,\n    UserpageComponent,\n    BatmanhospitalComponent,\n    BatmanPipe,\n    RobinPipe,\n    CatwomanPipe,\n    SupermanPipe,\n    RobinhospitalComponent,\n    CatwomanhospitalComponent,\n    SupermanhospitalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatTabsModule\n  ],\n  providers: [UsersService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \".highlight {\\r\\n    background-color: darkkhaki;\\r\\n}\\r\\n.card {\\r\\nbackground-color: rgb(224, 224, 148);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmF0bWFuaG9zcGl0YWwvYmF0bWFuaG9zcGl0YWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDJCQUEyQjtBQUMvQjtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDIiwiZmlsZSI6InNyYy9hcHAvYmF0bWFuaG9zcGl0YWwvYmF0bWFuaG9zcGl0YWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oaWdobGlnaHQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2toYWtpO1xyXG59XHJcbi5jYXJkIHtcclxuYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyNCwgMjI0LCAxNDgpO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Patient } from '../model/patient.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-batmanhospital',\n  templateUrl: './batmanhospital.component.html',\n  styleUrls: ['./batmanhospital.component.css']\n})\nexport class BatmanhospitalComponent implements OnInit {\n  patients: any[];\n  constructor(private obj: UsersService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.obj.getpatients().subscribe((res: any) => {\n      console.log(res);\n      this.patients = res;\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  onSubmit(data: Patient) {\n    console.log(data);\n    this.obj.updatepatient(data).subscribe((res: any) => {\n      console.log(res);\n      this.router.navigate(['/covid']);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n}\n","export default \".highlight {\\r\\n    background-color: darkkhaki;\\r\\n}\\r\\n.card {\\r\\nbackground-color: rgb(224, 224, 148);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2F0d29tYW5ob3NwaXRhbC9jYXR3b21hbmhvc3BpdGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7QUFDL0I7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyIsImZpbGUiOiJzcmMvYXBwL2NhdHdvbWFuaG9zcGl0YWwvY2F0d29tYW5ob3NwaXRhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhpZ2hsaWdodCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJra2hha2k7XHJcbn1cclxuLmNhcmQge1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI0LCAyMjQsIDE0OCk7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Patient } from '../model/patient.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-catwomanhospital',\n  templateUrl: './catwomanhospital.component.html',\n  styleUrls: ['./catwomanhospital.component.css']\n})\nexport class CatwomanhospitalComponent implements OnInit {\n\n  patients: any[];\n  constructor(private obj: UsersService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.obj.getpatients().subscribe((res: any) => {\n      console.log(res);\n      this.patients = res;\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  onSubmit(data: Patient) {\n    console.log(data);\n    this.obj.updatepatient(data).subscribe((res: any) => {\n      console.log(res);\n      this.router.navigate(['/covid']);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n}\n","export default \".tab {\\r\\n    background-color: floralwhite;\\r\\n    font-size: larger;\\r\\n    color: orangered;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY292aWQvY292aWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDZCQUE2QjtJQUM3QixpQkFBaUI7SUFDakIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY292aWQvY292aWQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZmxvcmFsd2hpdGU7XHJcbiAgICBmb250LXNpemU6IGxhcmdlcjtcclxuICAgIGNvbG9yOiBvcmFuZ2VyZWQ7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-covid',\n  templateUrl: './covid.component.html',\n  styleUrls: ['./covid.component.css']\n})\nexport class CovidComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".zoom {\\r\\n  padding: 10px;\\r\\n  background-color: rgb(157, 218, 157);\\r\\n  transition: transform .2s; /* Animation */\\r\\n  width: 160px;\\r\\n  height: 160px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.zoom:hover {\\r\\n  transform: scale(1.1); /* (150% zoom - Note: if the zoom is too large, it will go outside of the viewport) */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isb0NBQW9DO0VBQ3BDLHlCQUF5QixFQUFFLGNBQWM7RUFDekMsWUFBWTtFQUNaLGFBQWE7RUFDYixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UscUJBQXFCLEVBQUUscUZBQXFGO0FBQzlHIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuem9vbSB7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTU3LCAyMTgsIDE1Nyk7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4yczsgLyogQW5pbWF0aW9uICovXHJcbiAgd2lkdGg6IDE2MHB4O1xyXG4gIGhlaWdodDogMTYwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbi56b29tOmhvdmVyIHtcclxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7IC8qICgxNTAlIHpvb20gLSBOb3RlOiBpZiB0aGUgem9vbSBpcyB0b28gbGFyZ2UsIGl0IHdpbGwgZ28gb3V0c2lkZSBvZiB0aGUgdmlld3BvcnQpICovXHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { User } from '../model/users.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  status = true;\n\n  constructor(private obj: UsersService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  toggleStatus() {\n    this.status = !this.status;\n  }\n\n  onLogin(data: User) {\n    console.log(data);\n    this.obj.userLogin(data).subscribe(\n      (res: any) => {\n        console.log(res);\n        localStorage.setItem(\"useremail\", res.data.email);\n        localStorage.setItem(\"userphone\", res.data.phone);\n        localStorage.setItem('err_code', res.error_code);\n        console.log('err_code', localStorage.getItem('err_code'));\n        if (res.data.email === 'admin@admin.com') {\n          console.log('Ambulance driver', data);\n          this.router.navigate(['/covid']);\n        }\n        else {\n          console.log('user', data);\n\n          this.router.navigate(['/userpage']);\n\n\n        }\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n  onSignup(data: User) {\n    console.log(data);\n    this.obj.userSignup(data).subscribe(\n      (res: any) => {\n        console.log(res);\n        this.router.navigate(['/']);\n      },\n      err => {\n        console.log(err);\n      }\n    )\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'batman'\n})\nexport class BatmanPipe implements PipeTransform {\n\n  transform(data: any[]): any[] {\n    if (!data) return [];\n    return data.filter(it => {\n      return it.hospital.includes('Batman Hospital');\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'catwoman'\n})\nexport class CatwomanPipe implements PipeTransform {\n\n  transform(data: any[]): any[] {\n    if (!data) return [];\n    return data.filter(it => {\n      return it.hospital.includes('Catwoman Hospital');\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'robin'\n})\nexport class RobinPipe implements PipeTransform {\n\n  transform(data: any[]): any[] {\n    if (!data) return [];\n    return data.filter(it => {\n      return it.hospital.includes('Robin Hospital');\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'superman'\n})\nexport class SupermanPipe implements PipeTransform {\n\n  transform(data: any[]): any[] {\n    if (!data) return [];\n    return data.filter(it => {\n      return it.hospital.includes('Superman Hospital');\n    });\n  }\n\n}\n","export default \".highlight {\\r\\n    background-color: darkkhaki;\\r\\n}\\r\\n.card {\\r\\nbackground-color: rgb(224, 224, 148);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9iaW5ob3NwaXRhbC9yb2Jpbmhvc3BpdGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7QUFDL0I7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyIsImZpbGUiOiJzcmMvYXBwL3JvYmluaG9zcGl0YWwvcm9iaW5ob3NwaXRhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhpZ2hsaWdodCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJra2hha2k7XHJcbn1cclxuLmNhcmQge1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI0LCAyMjQsIDE0OCk7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Patient } from '../model/patient.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-robinhospital',\n  templateUrl: './robinhospital.component.html',\n  styleUrls: ['./robinhospital.component.css']\n})\nexport class RobinhospitalComponent implements OnInit {\n\n  patients: any[];\n  constructor(private obj: UsersService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.obj.getpatients().subscribe((res: any) => {\n      console.log(res);\n      this.patients = res;\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  onSubmit(data: Patient) {\n    console.log(data);\n    this.obj.updatepatient(data).subscribe((res: any) => {\n      console.log(res);\n      this.router.navigate(['/covid']);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../model/users.model';\nimport { Patient } from '../model/patient.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  url: any = 'https://covidrestapi.herokuapp.com';\n  id: any;\n\n  constructor(private http: HttpClient) { }\n\n  userSignup(data: User) {\n    const body = {\n      email: data.username,\n      password: data.password,\n      phone: data.phone\n    };\n    return this.http.post(this.url + '/covid/api/users/signup', body);\n  }\n\n  userLogin(data: User) {\n    const body = {\n      email: data.username,\n      password: data.password\n    };\n    return this.http.post(this.url + '/covid/api/users/login', body);\n  }\n\n  addPatient(data: Patient) {\n    const body = {\n      name: data.name,\n      contact: data.contact,\n      address: data.address,\n      symptom: data.symptom,\n      description: data.description,\n      pincode: data.pincode,\n      area: data.area,\n      hospital: data.hospital,\n      ambulance: data.ambulance,\n\n    };\n    return this.http.post(this.url + '/covid/api/addpatient', body);\n  }\n\n  getpatients() {\n    return this.http.get(this.url + '/covid/api/patients');\n  }\n\n  updatepatient(data: Patient) {\n    const body = {\n      _id: data._id,\n      name: data.name,\n      contact: data.contact,\n      address: data.address,\n      symptom: data.symptom,\n      description: data.description,\n      pincode: data.pincode,\n      area: data.area,\n      hospital: data.hospital,\n      ambulance: data.ambulance,\n      admitted: data.admitted,\n    };\n\n    return this.http.patch(this.url + '/covid/api/updatepatient/:_id', body);\n  }\n\n}\n","export default \".highlight {\\r\\n    background-color: darkkhaki;\\r\\n}\\r\\n.card {\\r\\nbackground-color: rgb(224, 224, 148);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3VwZXJtYW5ob3NwaXRhbC9zdXBlcm1hbmhvc3BpdGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7QUFDL0I7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyIsImZpbGUiOiJzcmMvYXBwL3N1cGVybWFuaG9zcGl0YWwvc3VwZXJtYW5ob3NwaXRhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhpZ2hsaWdodCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJra2hha2k7XHJcbn1cclxuLmNhcmQge1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI0LCAyMjQsIDE0OCk7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Patient } from '../model/patient.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-supermanhospital',\n  templateUrl: './supermanhospital.component.html',\n  styleUrls: ['./supermanhospital.component.css']\n})\nexport class SupermanhospitalComponent implements OnInit {\n\n  patients: any[];\n  constructor(private obj: UsersService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.obj.getpatients().subscribe((res: any) => {\n      console.log(res);\n      this.patients = res;\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n  onSubmit(data: Patient) {\n    console.log(data);\n    this.obj.updatepatient(data).subscribe((res: any) => {\n      console.log(res);\n      this.router.navigate(['/covid']);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJwYWdlL3VzZXJwYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\nimport { Patient } from '../model/patient.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-userpage',\n  templateUrl: './userpage.component.html',\n  styleUrls: ['./userpage.component.css']\n})\nexport class UserpageComponent implements OnInit {\n  pin: any = '';\n  area: any;\n  hospital: any;\n  ambulance: any;\n  batman: any = ['AMB1', 'AMB2'];\n  catwoman: any = ['AMC1', 'AMC2'];\n  superman: any = ['AMS1', 'AMS2'];\n  constructor(private obj: UsersService, private router: Router) { }\n\n  ngOnInit() {\n\n    //check if there is no user logged in\n    if (localStorage.getItem('err_code') === null && localStorage.getItem('useremail') === null) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  shuffle(array: any) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array[0];\n  }\n\n  onKey(event: any) {\n    this.pin = event.target.value;\n    if (this.pin === '403200') {\n      this.area = 'North';\n      this.hospital = 'Batman Hospital';\n      this.ambulance = this.shuffle(this.batman);\n    }\n    else if (this.pin === '403201') {\n      this.area = 'East';\n      this.hospital = 'Robin Hospital';\n      this.ambulance = 'AMR1';\n    }\n    else if (this.pin === '403202') {\n      this.area = 'South';\n      this.hospital = 'Catwoman Hospital';\n      this.ambulance = this.shuffle(this.catwoman);\n    }\n    else if (this.pin === '403203') {\n      this.area = 'West';\n      this.hospital = 'Superman Hospital';\n      this.ambulance = this.shuffle(this.superman);\n    }\n  }\n\n  addPatient(data: Patient) {\n    console.log(data);\n    this.obj.addPatient(data).subscribe((res: any) => {\n      console.log(res);\n      alert(res.message);\n      this.router.navigate(['/dashboard']);\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}